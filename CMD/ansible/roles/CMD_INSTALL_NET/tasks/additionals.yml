- name: APT INSTALL
  become: 'yes'
  register: reg_vnstat_install
  apt:
    name: '{{ item.source }}'
    state: latest
  with_items:
    - {source: 'vnstat'}
- name: GIT PULL MY CONFIG REPO
  become: 'yes'
  when: reg_vnstat_install.changed
  register: reg_temp_my_config
  git:
    repo: 'git@github.com:wojciechGaudnik/my-config.git'
    dest: '~/.my-config-tmp'
    version: master
- name: VNSTAT SETUP
  become: 'yes'
  when: reg_vnstat_install.changed
  copy:
    src='{{ item.src }}'
    dest='{{ item.dest }}'
    remote_src='{{ item.remote_src }}'
    mode='{{ item.mode }}'
  with_items:
    - {src: '~/.my-config-tmp/CMD/config/vnstat/etc/vnstat.conf', dest: '/etc/vnstat.conf', remote_src: 'yes', mode: '0644' }
    - {src: '~/.my-config-tmp/CMD/config/vnstat/var/lib/vnstat/vnstat.db', dest: '/var/lib/vnstat/vnstat.db', remote_src: 'yes', mode: '0644' }
- name: REMOVE MY CONFIG AFTER VNSTAT INSTALLATION
  become: 'yes'
  when: reg_temp_my_config.changed
  file:
    state: absent
    path: ~/.my-config-tmp
- name: TEST WAKE ON LAN
  become: 'yes'
  vars:
    ip_addr: "{{ ansible_default_ipv4.address }}"
    all_inter: "{{ ansible_facts | dict2items | selectattr('value.ipv4', 'defined') | map(attribute='value') | list }}"
    inter: "{{ all_inter | selectattr('ipv4.address', 'equalto', ip_addr) | first }}"
  register: reg_wake_on_lan_test
  shell: 'cat /sys/class/net/{{ inter.device }}/device/power/wakeup'
  changed_when: false
  when: inventory_hostname in groups['WAKE_ON_LAN_HOSTS']
- name: SET WAKE ON LAN
  become: 'yes'
  vars:
    ip_addr: "{{ ansible_default_ipv4.address }}"
    all_inter: "{{ ansible_facts | dict2items | selectattr('value.ipv4', 'defined') | map(attribute='value') | list }}"
    inter: "{{ all_inter | selectattr('ipv4.address', 'equalto', ip_addr) | first }}"
  shell: "ethtool --change {{ inter.device }} wol g"
  when: reg_wake_on_lan_test.stdout is defined and reg_wake_on_lan_test.stdout == 'disabled'
- debug: var=ansible_hostname
